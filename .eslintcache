[{"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/index.tsx":"1","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/App.tsx":"2","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/routes/index.tsx":"3","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Dashboard/index.tsx":"4","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Repository/index.tsx":"5","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Dashboard/style.ts":"6","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/styles/global.ts":"7","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/services/api.ts":"8","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Repository/style.ts":"9"},{"size":197,"mtime":1609792471594,"results":"10","hashOfConfig":"11"},{"size":324,"mtime":1611246898089,"results":"12","hashOfConfig":"11"},{"size":397,"mtime":1611246745021,"results":"13","hashOfConfig":"11"},{"size":2548,"mtime":1610571477126,"results":"14","hashOfConfig":"11"},{"size":2647,"mtime":1610572031913,"results":"15","hashOfConfig":"11"},{"size":1772,"mtime":1610484663951,"results":"16","hashOfConfig":"11"},{"size":511,"mtime":1611230316994,"results":"17","hashOfConfig":"11"},{"size":101,"mtime":1610398574666,"results":"18","hashOfConfig":"11"},{"size":1811,"mtime":1610569243454,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"zj0lkl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/index.tsx",[],["40","41"],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/App.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/routes/index.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Dashboard/index.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Repository/index.tsx",["42","43"],"import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nimport LogoSvg from '../../assets/Logo.svg';\n\nimport { Header, Issues, RepositoryInfo } from './style';\nimport { Api } from '../../services/api';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface IRepository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface IIssue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  }\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  const [repository, setRepository] = useState<IRepository | null>(null);\n  const [issues, setIssues] = useState<IIssue[]>([]);\n\n  useEffect(() => {\n    loadData();\n  }, [params.repository]);\n\n  async function loadData() {\n    const [repository, issues] = await Promise.all([\n      Api.get(`repos/${params.repository}`),\n      Api.get(`repos/${params.repository}/issues`)\n    ]);\n\n    setRepository(repository.data);\n    setIssues(issues.data);\n  }\n\n  return (\n    <>\n      <Header>\n        <img src={LogoSvg} alt='GitHub Explorer' />\n        <Link to='/'>\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n      { repository && (\n        <RepositoryInfo>\n          <header>\n            <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count ? repository.stargazers_count : 0}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count ? repository.forks_count : 0}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count ? repository.open_issues_count : 0}</strong>\n              <span>Issues</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map(issue => (\n          <a key={issue.id} href={issue.html_url} target='_blank'>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n}\n\nexport default Repository;","/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Dashboard/style.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/styles/global.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/services/api.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gitexplorer/src/pages/Repository/style.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":43,"column":6,"nodeType":"50","endLine":43,"endColumn":25,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":92,"column":11,"nodeType":"54","endLine":92,"endColumn":67},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["57"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [loadData, params.repository]",{"range":"60","text":"61"},[954,973],"[loadData, params.repository]"]